###################################################
# AUTOMATIONS                                     #
###################################################

  - alias: 'Set theme at startup'
    trigger:
      platform: homeassistant
      event: start
    action:
      service: frontend.set_theme
      data:
        name: Dark - Blue
        
  - alias: Restart HASS
    trigger:
      - platform: state
        entity_id: input_boolean.restart_hass
        from: 'off'
        to: 'on'
    action:
      service: homeassistant.restart
      
  #Publish time to all devices every 5 minutes or when a device requests an update (boot up or invalid time detected (by the device))
  - alias: Publish Time
    trigger:
      - platform: time_pattern
        minutes: '/5'
      - platform: mqtt
        topic: "Home/Global/Time/Request"
        payload: 'ON'
        encoding: 'utf-8'
    condition:
      condition: or
      conditions: 
        - condition: template
          value_template: '{{ states.automation.publish_time.attributes.last_triggered == none }}'
        - condition: template
          value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.publish_time.attributes.last_triggered) > 10 }}'
    action:
      service: mqtt.publish
      data_template:
        topic: "Home/Global/Time"
        #IMPORTANT - Always send a delimiter at the end of the string for parsing to succeed
        payload: "{{ '{:04}:{:02}:{:02}:{:02}:{:02}:{:02}:'.format(now().year, now().month, now().day, now().hour, now().minute, now().second) }}"

  - alias: Daily Backup 3 AM
    trigger:
      platform: time
      at: '3:00:00'
    action:
      service: hassio.snapshot_partial
      data_template:
        name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
        addons:
        #   - a0d7b954_home-panel
        #   - a0d7b954_influxdb
          - a0d7b954_chrony
          - a0d7b954_grocy
          - core_configurator
          - core_samba
          - core_duckdns
          - core_mosquitto
        folders:
        - homeassistant
        - ssl
#        - share
#        - addons_local.tar

  - alias: Purge Database
    initial_state: True
    trigger:
      platform: time
      at: '04:00:00'
    action:
      service: recorder.purge
      data:
        keep_days: 2
        repack: true

  - alias: Daily Backup Cleanup
    trigger: 
      platform: time
      at: '04:00:00'
    action:
      - service: clean_up_snapshots_service.clean_up

  - alias: Water valve ON
    trigger:
      - platform: state
        entity_id: switch.water_valve_open
        to: 'on'
      - platform: state
        entity_id: switch.water_valve_open
        to: 'on'
        for: '00:00:08'
      - platform: state
        entity_id: sensor.water_valve_status
        to: 'Opened'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.water_valve_open
          state: 'on'
        - condition: state
          entity_id: sensor.water_valve_status
          state: 'Opened'
        # - condition: numeric_state
          # entity_id: sensor.outdoor_temperature
          # below: 2
    action:
      service: switch.turn_off
      entity_id: switch.water_valve_open
      
  - alias: Water valve OFF
    trigger:
      - platform: state
        entity_id: switch.water_valve_close
        to: 'on'
      - platform: state
        entity_id: switch.water_valve_close
        to: 'on'
        for: '00:00:08'
      - platform: state
        entity_id: sensor.water_valve_status
        to: 'Closed'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.water_valve_close
          state: 'on'
        - condition: state
          entity_id: sensor.water_valve_status
          state: 'Closed'
    action:
      service: switch.turn_off
      entity_id: switch.water_valve_close
      
  #Force water valve off if the feedback signal fails (prevent water leaks)
  - alias: Water valve Force Off
    trigger:
      - platform: state
        entity_id: sensor.water_valve_status
        to: 'Unknown'
        for: '00:00:20'
      - platform: state
        entity_id: switch.water_valve_open
        to: 'off'
        for: '00:00:20'
      - platform: state
        entity_id: switch.water_valve_close
        to: 'off'
        for: '00:00:20'
    condition:
      - condition: state
        entity_id: sensor.water_valve_status
        state: 'Unknown'
    action:
      service: switch.turn_on
      entity_id: switch.water_valve_close
          
  - alias: Publish Heartbeat
    trigger:
      - platform: time_pattern
        seconds: '/1'
    action:
      - service: counter.increment
        entity_id: counter.heartbeat_counter
      # - service: modbus.write_register
        # data_template:
          # hub: MB_ControlRoom
          # unit: 1
          # address: 0
          # value: "{{ states.counter.heartbeat_counter.state  | int }}"
          
  - alias: Reset Heartbeat
    trigger:
      - platform: template
        value_template: '{{ (states.counter.heartbeat_counter.state|int) >= (states.counter.heartbeat_counter.attributes.maximum|int) }}'
        for: '00:00:01'
    action:
      - service: counter.reset
        entity_id: counter.heartbeat_counter

  - alias: Rain Counter
    trigger:
      - platform: state
        entity_id: sensor.rain_level_toggle
        from: 'OFF'
        to: 'ON'
      - platform: state
        entity_id: sensor.rain_level_toggle
        from: 'ON'
        to: 'OFF'
    action:
      - service: script.rain_count
  
  - alias: Doorchime TF Trigger
    trigger:
      - platform: state
        entity_id: binary_sensor.house_fd_bell
        from: 'off'
        to: 'on'
    condition:
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.doorchime_tf_trigger.attributes.last_triggered) > 2 }}'
    action:
      service: mqtt.publish
      data_template:
        topic: "Home/Chime/Top/Cmd"
        #IMPORTANT - Always send all 3 infos for correct assignement of tune and volume
        payload: "{state:ON, sound:{{ state_attr('input_select.doorchime_tf_sound','options').index(states('input_select.doorchime_tf_sound'))|int }}, volume: {{ states.input_number.doorchime_tf_volume.state|int }} }"
