
light:
  - platform: mqtt
    schema: json
    name: Pool Clock
    state_topic: "Outside/Pool/Clock/LED/Stts"
    command_topic: "Outside/Pool/Clock/LED/Cmd"
    availability_topic: "Outside/Pool/Clock/LWT"
    payload_available: "online"
    payload_not_available: "offline"
    brightness: true
    rgb: true
    white_value: false
    effect: true
    effect_list: [Default, RainbowCycle, TextColor, Spoon, VertRainbowCycle, HorizRainbowCycle, TextChaser, AllEffectsRolling]
    optimistic: false
    qos: 0
    
input_number:
  pool_clock_scroll_speed:
    name: Pool Text Scroll Speed
    mode: slider
    initial: 80
    min: 0
    max: 100
    step: 5
  pool_clock_trans_speed:
    name: Pool Color Cycle Speed
    mode: slider
    initial: 1
    min: 1
    max: 10
    step: 1
    
input_text:
  pool_text_top:
    name: Pool Text Display Top
    pattern: '^[a-zA-Z0-9]*$'
    min: 0
    max: 80
    mode: text
  pool_text_bottom:
    name: Pool Text Display Bottom
    pattern: '^[a-zA-Z0-9]*$'
    min: 0
    max: 80
    mode: text

automation:
  #Publish time to all devices every 5 minutes or when a device requests an update (boot up or invalid time detected (by the device))
  - alias: Publish Time
    trigger:
      - platform: time_pattern
        minutes: '/5'
      - platform: mqtt
        topic: "Home/Global/Time/Request"
        payload: 'ON'
        encoding: 'utf-8'
    action:
      service: mqtt.publish
      data_template:
        topic: "Home/Global/Time"
        #IMPORTANT - Always send a delimiter at the end of the string for parsing to succeed
        payload: "{{ '{:04}:{:02}:{:02}:{:02}:{:02}:{:02}:'.format(now().year, now().month, now().day, now().hour, now().minute, now().second) }}"
  
  - alias: Pool Top Text Change
    trigger:
      platform: state
      entity_id: input_text.pool_text_top
    action:
    - service: mqtt.publish
      data_template:
        topic: "Outside/Pool/Clock/Cmd"
        payload: '{"uptxt":"{{ trigger.to_state.state }}"}'
        qos: 0
        retain: false
        
  - alias: Pool Bottom Text Change
    trigger:
      platform: state
      entity_id: input_text.pool_text_bottom
    action:
    - service: mqtt.publish
      data_template:
        topic: "Outside/Pool/Clock/Cmd"
        payload: '{"dntxt":"{{ trigger.to_state.state }}"}'
        qos: 0
        retain: false

  - alias: "Pool Clock Scroll Speed"
    initial_state: True
    trigger:
      platform: state
      entity_id: input_number.pool_clock_scroll_speed
    action:
    - service: mqtt.publish
      data_template:
        topic: "Outside/Pool/Clock/Cmd"
        payload: '{"scroll":{{ trigger.to_state.state | int }}}'
        qos: 0
        retain: false
        
  - alias: "Pool Clock Transistion Speed"
    initial_state: True
    trigger:
      platform: state
      entity_id: input_number.pool_clock_trans_speed
    action:
    - service: mqtt.publish
      data_template:
        topic: "Outside/Pool/Clock/LED/Cmd"
        payload: '{"transition":{{ trigger.to_state.state | int }}}'
        qos: 0
        retain: false
        
#Publish data to device every minute or when a device requests an update (boot up or invalid data detected (by the device))
  - alias: Publish Pool Clock Data
    trigger:
      - platform: time_pattern
        minutes: '/1'
      - platform: mqtt
        topic: "Home/Global/Time/Request"
        payload: 'ON'
        encoding: 'utf-8'
    action:
      - service: mqtt.publish
        data_template:
          topic: "Outside/Pool/Clock/Cmd"
          payload_template: '{"wtemp":"{{states.sensor.pool_temperature.state}}","wph":"{{states.sensor.pool_ph.state}}","otemp":"{{states.sensor.outdoor_temperature.state}}","ohum":"{{states.sensor.outdoor_humidity.state}}"}'
          qos: 0
          retain: false
        
sensor:
  //Add your sensors for outside temp, outside hum, water temp and water ph
  
  - platform: mqtt
    name: "Pool Clock"
    icon: mdi:clock
    state_topic: "Outside/Pool/Clock/LED/Stts"
    availability_topic: "Outside/Pool/Clock/LWT"
    payload_available: "online"
    payload_not_available: "offline"
    qos: 0
    value_template: >
      {% if value_json.state == "ON" %}
        On
      {% else %}
        Off
      {% endif %}
    json_attributes_topic: "Outside/Pool/Clock/Json"

customize:
  sensor.pool_clock:
    friendly_name: "Pool Clock"
    templates:
      icon_color: >
        if (state === 'On') return 'var(--state-icon-active-color)';
        if (state === 'unavailable') return 'var(--state-icon-unavailable-color)';
        return 'var(--state-icon-color)';

views:
- title: Pool Controls
  icon: mdi:pool
  path: pool
  visible: true
  badges:
    - sensor.pool_temperature
    - sensor.pool_ph
  cards:
    - type: entities
      title: Pool Clock Display
      show_header_toggle: false
      entities:
        - type: custom:fold-entity-row
          head: sensor.pool_clock
          entities:
          - light.pool_clock
          - input_text.pool_text_top
          - input_text.pool_text_bottom
          - input_number.pool_clock_scroll_speed
    
